@include "swarm.fgd"
@include "swarm_fixed_ents.fgd"

@MaterialExclusion
[
	"console"
	"particle"
	"vgui"
	"voice"
]

@PointClass base(Targetname) = asw_deathmatch_mode : "If this entity is present Deathmatch game rules will be applied"
[
]

@PointClass base(PlayerClass, Angles) studio("models/editor/playerstart.mdl") = info_player_start_team1 :
	"This entity indicates the position and facing direction at which the player will spawn. Any number of "+
	"info_player_start entities may be placed in a map for when working in cordoned-off portions of the map. "+
	"When multiple info_player_start entities are present in a map, set the 'Master' spawnflag on one of them "+
	"to indicate which one should be used when running the entire map."
[
	spawnflags(flags) =
	[
		1: "Master (Has priority if multiple info_player_starts exist)" : 0
	]
]

@PointClass base(PlayerClass, Angles) studio("models/editor/playerstart.mdl") = info_player_start_team2 :
	"This entity indicates the position and facing direction at which the player will spawn. Any number of "+
	"info_player_start entities may be placed in a map for when working in cordoned-off portions of the map. "+
	"When multiple info_player_start entities are present in a map, set the 'Master' spawnflag on one of them "+
	"to indicate which one should be used when running the entire map."
[
	spawnflags(flags) =
	[
		1: "Master (Has priority if multiple info_player_starts exist)" : 0
	]
]

@PointClass base(Targetname, Parentname, Angles, Studiomodel) studioprop("models/sentry_gun/flame_top.mdl") = asw_sentry_top_flamer
[
	TurretRange(float) : "Turret Range" : "375" : "Maximum distance that it will pick targets."
]

@PointClass base(Targetname, Parentname, Angles, Studiomodel) studioprop("models/sentry_gun/freeze_top.mdl") = asw_sentry_top_icer
[
	TurretRange(float) : "Turret Range" : "300" : "Maximum distance that it will pick targets."
]

@PointClass base(Targetname, Parentname, Angles, Studiomodel) studioprop("models/sentry_gun/grenade_top.mdl") = asw_sentry_top_cannon
[
	TurretRange(float) : "Turret Range" : "1000" : "Maximum distance that it will pick targets."
	FireRate(float) : "Fire Rate" : "1.75" : "Time in seconds between each shot"
]

@SolidClass base(Trigger) = trigger_rd_marine_jumpjet :
	"A trigger volume that will force marine to perform jump jet or blink effect."
[
	wait(float) : "Delay Before Reset" : -1 : "Amount of time, in seconds, after the trigger has triggered before it can be triggered again. If set to -1, it will never trigger again. 0.2 is minimum, 0 will be converted to 0.2"
	
	Destination1(target_destination) : "Destination" : : "Marine will jump to this entity's origin. Each next jump will be performed to subsequent destination entity"
	Destination2(target_destination) : "Destination" : : "Marine will jump to this entity's origin. Each next jump will be performed to subsequent destination entity"
	Destination3(target_destination) : "Destination" : : "Marine will jump to this entity's origin. Each next jump will be performed to subsequent destination entity"
	Destination4(target_destination) : "Destination" : : "Marine will jump to this entity's origin. Each next jump will be performed to subsequent destination entity"
	Destination5(target_destination) : "Destination" : : "Marine will jump to this entity's origin. Each next jump will be performed to subsequent destination entity"
	Destination6(target_destination) : "Destination" : : "Marine will jump to this entity's origin. Each next jump will be performed to subsequent destination entity"
	Destination7(target_destination) : "Destination" : : "Marine will jump to this entity's origin. Each next jump will be performed to subsequent destination entity"
	Destination8(target_destination) : "Destination" : : "Marine will jump to this entity's origin. Each next jump will be performed to subsequent destination entity"
  
	JumpType(choices) : "Jump type" : 0 =
	[
		0 : "Jump Jet"
		1 : "Blink"
	]	
	
	JumpTimeOverride(float) : "Jump duration override" : 0 : "Time in seconds needed to perform Jump Jet or Blink. If 0 the default value is used "
	AnimationTimeOverride(float) : "Jump Jet animation time override" : 0 : "Time in seconds needed to perform Jump Jet or Blink animation. If 0 the default value is used "
	 
	// Outputs
	output OnJumpJetDone(void) : "Fired whenever the trigger is activated and jump started."
]

@SolidClass base(Trigger) = trigger_rd_sticktogether_area :
	"A trigger volume that will force bot marines to immediately follow leader inside this volume. Requires info_marine_hint or info_node_marine_hint entities inside the volume to work "
[
]

@FilterClass base(BaseFilter) iconsprite("editor/filter_name.vmt") = asw_filter_rolling :
	"A filter that selects rolling marines."
[
]

// BenLubar(sd2-ceiling-ents): func_asw_fade, prop_asw_fade, and env_sprite_asw_fade

@SolidClass base(Targetname, Parentname, Origin, RenderFields, Global, Inputfilter, EnableDisable, Shadow) = func_asw_fade : 
	"A func_brush that fades when the camera is third person and the marine is below the origin." 
[
	spawnflags(flags) =
	[
		2: "Ignore player +USE" : 1
	]

	_minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."
	Solidity(choices) : "Solidity" : 2 : "Used to control the solidity/collision of these brushes." =
	[
		0 : "Toggle"
		1 : "Never Solid"
		2 : "Always Solid"
	]
	excludednpc(string) : "NPC class excluded from collisions" : "" : "If an NPC classname is specified here, NPCs of that type won't collide with these brushes. In Episodic, you may also specify an individual entity's name."
	invert_exclusion(choices) : "Invert NPC class exclusion" : 0 : "If set, then the excluded NPC class will consider this brush solid, and all other NPC classes will consider it non-solid." =
	[
		0 : "No"
		1 : "Yes"
	]

	solidbsp(boolean) : "Solid BSP" : 0 : "Set this if this brush is in heirarchy with a moving object of some kind, and the player can stand on this brush."

	vrad_brush_cast_shadows(boolean) : "Shadows" : 1 : "Set this if this brush casts lightmap shadows."

	fade_opacity(integer) : "Fade Alpha (0-255)" : 0 : "Opacity to fade to when in third person and the marine is below the origin."
	AllowFade(boolean) : "Allow Fade" : 1 : ""

	input SetExcluded( string ) : "Change the NPC class excluded from collisions"
	input SetInvert( integer ) : "Set the state of invversion for NPC class exclusion (0 or 1)"
	input AllowFade( integer ) : "Enable or disable fading (0 or 1)"
]

@PointClass base(prop_dynamic_base, EnableDisable) sphere(fademindist) sphere(fademaxdist) studioprop() = prop_asw_fade :
	"A prop_dynamic that fades when the camera is third person and the marine is below the origin."
[
	fade_opacity(integer) : "Fade Alpha (0-255)" : 0 : "Opacity to fade to when in third person and the marine is below the origin."
	AllowFade(boolean) : "Allow Fade" : 1 : ""
	fade_origin(origin) : "Fade Origin (X Y Z)" : : ""

	input AllowFade(integer) : "Enable or disable fading (0 or 1)"
]

@PointClass base(Targetname, Parentname, RenderFields,DXLevelChoice) size(-2 -2 -2, 2 2 2) sprite() color(20 140 20) = env_sprite_asw_fade : 
	"An env_sprite that fades when the camera is third person and the marine is below the origin." 
[
	framerate(string) : "Framerate" : "10.0" : "Rate at which the sprite should animate, if at all."
	model(sprite) : "Sprite Name" : "sprites/glow01.spr" : "Material of the sprite to be drawn."
	scale(string) : "Scale" : "" : "Scale multiplier of the sprite."
	spawnflags(flags) =
	[
		1: "Start on" : 0
		2: "Play Once" : 0
	]

	GlowProxySize(float) : "Size of Glow Proxy Geometry." : "2.0" : "Size of the glow to be rendered for visibility testing. Must be larger than the distance from the sprite center to empty space.  So if this glow is inside geometry (like a light bulb), set this value to be bigger than the bulb's radius. Any time a sphere of this radius would be visible (poking through any nearby geometry), the glow will be rendered."

	HDRColorScale(float) : "HDR color scale." : "1.0" : "float value to multiply sprite color by when running in HDR mode."

	fade_opacity(integer) : "Fade Alpha (0-255)" : 0 : "Opacity to fade to when in third person and the marine is below the origin."
	AllowFade(boolean) : "Allow Fade" : 1 : ""
	fade_origin(origin) : "Fade Origin (X Y Z)" : : ""

	// Inputs
	input ColorRedValue(float) : "Sets the red color channel's value (0 - 255)."
	input ColorGreenValue(float) : "Sets the green color channel's value (0 - 255)."
	input ColorBlueValue(float) : "Sets the blue color channel's value (0 - 255)."
	input SetScale(float) : "Set the sprite's scale (0 - 8.0)."
	input HideSprite(void) : "Hide the sprite. Won't be drawn until the 'ShowSprite' input is received."
	input ShowSprite(void) : "Show the sprite."
	input ToggleSprite(void) : "Toggle the sprite between hidden and shown."
	input AllowFade(integer) : "Enable or disable fading (0 or 1)"
]

// 50cal Pickup //
@PointClass base(ASWPickup) studio("models/weapons/50calmg/50calmg.mdl")= 

asw_pickup_50calmg : "50cal Machine Gun"
[
	BulletsInGun(integer) : "Bullets In Gun" : 200
]

@SolidClass base(Targetname, EnableDisable) = func_rd_no_director_aliens : "A volume that prevents the director from spawning aliens on nodes within its bounds."
[
]

@PointClass base(Targetname, Parentname) iconsprite("editor/flat.vmt") = asw_health_bar :
    "Displays health of parent entity"
[
	StartDisabled(boolean) : "Start Disabled" : 0 : ""
	hideatfullhealth(boolean) : "Hide at Full Health" : 1 : "Health bar won't be displayed if its parent entity has full health"
	
	color(color255) : "Color" : "255 0 0 255" : "Color of this health bar." 
	
	scale(string) : "Scale" : "1.0" : "Scale multiplier of the sprite."
	
	// Inputs
	input Disable(void) : "Hide the health bar. Won't be drawn until the 'Enable' input is received."
	input Enable(void) : "Show the health bar."
	input SetScale(float) : "Set the sprite's scale (0 - 8.0)."
]

@PointClass base(Targetname) iconsprite("editor/flat.vmt") = rd_boss_bar :
	"Displays the progress of an event. (eg. the health of a boss)"
[
	BarMode(choices) : "Display Mode" : 0 : "How to display this bar on the player's screen." =
	[
		0 : "Fill To Right"
		1 : "Fill To Left"
		2 : "Numeric Value"
	]
	BarValue(float) : "Starting Value" : 100 : ""
	BarMax(float) : "Max Value" : 100 : ""
	BarID(string) : "Bar Group Identifier" : "" : "If two rd_boss_bar have different identifiers, they represent different bars that can appear on screen at the same time. This can be any text."
	BarTitle(string) : "Bar Title" : "" : "The title to display on the bar. Only the rd_boss_bar with the lowest Column and Row in a group will display its title."
	BarColumn(integer) : "Column" : 1 : ""
	BarRow(integer) : "Row" : 1 : ""
	BarScale(float) : "Height Scale" : "1.0" : ""
	BarFGColor(color255) : "Filled Color" : "93 149 193 255" : ""
	BarBGColor(color255) : "Empty Color" : "9 32 54 255" : ""
	BarBorderColor(color255) : "Border Color" : "29 76 111 255" : ""
	BarFlashColor(color255) : "Flash Color" : "255 255 255 255" : "The color for the end of the bar when it differs from its previous value."
	BarFlashSustain(float) : "Flash Sustain Time" : "0.75" : "The number of seconds before the bar starts animating after it has changed."
	BarFlashInterpolate(float) : "Flash Interpolate Time" : "0.25" : "The number of seconds from the bar starting animating to finishing animating when it changes."

	// Inputs
	input Enable(void) : "Show the bar."
	input Disable(void) : "Hide the bar."
	input BarValue(float) : "Set the value of the bar."
	input BarMax(float) : "Change the maximum value of the bar."
	input BarScale(float) : "Change the height of the bar."
	input BarFGColor(color255) : ""
	input BarBGColor(color255) : ""
	input BarBorderColor(color255) : ""
	input BarFlashColor(color255) : ""
]

@SolidClass base(Targetname, Parentname, Origin, Trigger, EnableDisable) = trigger_asw_marine_melee :
	"A trigger volume that activates when a marine performs a melee attack "
[
	spawnflags(flags) = 
	[
		//1: "Clients" : 0
		2: "Marines and Aliens" : 1
		4: "Pushables": 0
		8: "Physics Objects" : 0
		16: "Only marines" : 0
		//32: "Only clients in vehicles" : 0
		64: "Everything" : 0
		//512: "Only clients *not* in vehicles" : 0
	]

	AngleTolerance(float) : "Angle Tolerance" : "30.0" : "The number of degrees from exactly facing the origin that the trigger will allow. Set to 360 to ignore origin location."

	output OnTrigger(void) : "Fired when a marine melee attacks towards the origin of this trigger while standing in it."
]

@FilterClass base(BaseFilter) iconsprite("editor/filter_class.vmt") = asw_filter_marine_class :
	"A filter that selects marines of a specified class."
[
	MarineClass(choices) : "Marine Class" : 0 : "The class of marine to match in this filter." =
	[
		0 : "Officer"
		1 : "Special Weapons"
		2 : "Medic"
		3 : "Tech"
	]
]

@PointClass base(Angles) = rd_tilegen_instance : "Used for TileGen instancing. Replaced with a random func_instance, but only if the map is compiled using TileGen."
[
	targetname(target_source) : "Fix Up Name" : : "The name that all entities will be fixed up with based upon the fix up style."
	fixup_style(Choices) : "Entity Name Fix Up" : 0 : "Fixup style for instanced entity names.  Uses the 'Fix Up Name' field." =
	[
		0 : "Prefix"
		1 : "Postfix"
		2 : "None"
	]

	glob1(string) : "Filename Pattern 1" : "lights_*.vmf" : ""
	weight1(float) : "Weight 1" : "1" : ""
	glob2(string) : "Filename Pattern 2" : "" : ""
	weight2(float) : "Weight 2" : "0" : ""
	glob3(string) : "Filename Pattern 3" : "" : ""
	weight3(float) : "Weight 3" : "0" : ""
	glob4(string) : "Filename Pattern 4" : "" : ""
	weight4(float) : "Weight 4" : "0" : ""
	glob5(string) : "Filename Pattern 5" : "" : ""
	weight5(float) : "Weight 5" : "0" : ""
	glob6(string) : "Filename Pattern 6" : "" : ""
	weight6(float) : "Weight 6" : "0" : ""
	glob7(string) : "Filename Pattern 7" : "" : ""
	weight7(float) : "Weight 7" : "0" : ""
	glob8(string) : "Filename Pattern 8" : "" : ""
	weight8(float) : "Weight 8" : "0" : ""
	glob9(string) : "Filename Pattern 9" : "" : ""
	weight9(float) : "Weight 9" : "0" : ""

	replace01(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace02(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace03(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace04(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace05(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace06(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace07(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace08(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace09(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace10(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
]

@PointClass base(ASWPickup, Studiomodel, RenderFields) studioprop() = rd_weapon_generic_object : "Carryable Object"
[
	CarriedName(string) : "Object Name" : "" : "The name of this object for the UI."
	MoveSpeedMultiplier(float) : "Movement Speed Multiplier" : "1.0" : "How fast marines should move while carrying this item."
	LargeObject(choices) : "Carry Animation" : 1 : "Which set of carry animations to use." =
	[
		0 : "Small Object"
		1 : "Large Object"
	]
	UseBoneMerge(choices) : "Carry Mode" : 0 : "How to place the object while it is being carried." =
	[
		0 : "Offset + Angle"
		1 : "Bone Merge"
	]
	CarriedAngle(angle) : "Carried Angle" : "0 0 0" : ""
	CarriedOffset(vector) : "Carried Offset" : "0 0 0" : ""
]

@SolidClass base( Targetname, EnableDisable ) = rd_func_jumpjet : "An entity to control free jumping/blinking area."
[
]

@PointClass base(Targetname) = asw_voiceover_dialogue : "Simple entity to replace logic_choreographed_scene when only one globally-audible voice line is needed."
[
	soundname(sound) report : "Sound Script Name" : "" : "Sound script name, should be an entry from level_sounds_*.txt or game_sounds_*.txt. For custom maps, create a file named maps/[mapname]_level_sounds.txt."
	actorname(string) : "Actor Name" : "" : "Name of actor for this voice line. If the same actor name is used for multiple asw_voiceover_dialogue entities, they will use the busy actor setting. Case insensitive, not displayed in-game."
	busyactor(choices) : "If an Actor is talking..." : 1 : "What to do if an actor this voice line needs is already talking when this dialogue is told to start." =
	[
		0 : "Start immediately"
		1 : "Wait for actor to finish"
	]

	// Inputs
	input Start(void) : "Starts playback of the voice line"

	// Outputs
	output OnStart(void) : "The voice line has started"
	output OnCompletion(void) : "The voice line has completed"
]

@PointClass base(Targetname, Parentname, Angles) studioprop("models/editor/camera.mdl") = rd_briefing_camera : "During briefing, show this camera's view instead of a looping video."
[
	fov(float) : "FOV" : 75 : "Field of view in degrees"
]

@SolidClass base(Trigger) = trigger_tonemap : "Change active tonemap for characters in this volume."
[
	TonemapName(target_destination) : "Tonemap Name" : : "Name of an env_tonemap_controller entity to make active."
]
